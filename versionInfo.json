{"name":"next-auth","tag":"4.10.0","fullName":"next-auth@4.10.0","ecosystem":"npm","description":"Authentication for Next.js","contributors":[{"name":"Balázs Orbán","email":"info@balazsorban.com"},{"name":"Nico Domino","email":"yo@ndo.dev"},{"name":"Lluis Agusti","email":"hi@llu.lu"}],"dist":{"integrity":"sha512-4CKZbv9VeCaqfDAXyqFThZy05ApbLd0bhXEB+DCq9aD43h6Rkvz0QgM7QOCJXESy0QKJUXHzopkBq+iaGxdc0g==","shasum":"cffa850cb0f633e6340d34c567634df1d10feabe","tarball":"https://registry.npmjs.org/next-auth/-/next-auth-4.10.0.tgz","fileCount":220,"unpackedSize":338925,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD8QNxFzgk1VwIQtR4oO2j9s329HlxI3qwuaCMTyphABAIgBii5j+xUgB0/PShAtt/vnMRGpyV5+oAifKEj+kamuIg="}],"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJizrcFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpdrA/+LZlxXWvGPQehpADch8xSMNvQNzcWHjDjrgRUSdqijv0SymqC\r\nWGKyzJipVB3dZHWDwvntTGQSStvpqJ6wDpst8eF2pQ+unbT8Zjdak37S3L8k\r\nhQQ+N8ThuuLvQEhGa1EFC8q3Rsv1aUlgDOGmzvaBa2E1jD294UnBUo6XO1jr\r\nRs9eITUrcjJI4KwZCzzK60yi9DeGH1cMUu3fMOmNCC8P7fpbrdz4WvA7EdVk\r\nIRU/FKCS68u0QY98jOnuKQ7SGQSfQR9rdseQ7tVB0L4dZstLT+vr60mNel9G\r\nFJawwTglhCMLHufr1F6EsoiOUBAcjxqgE8wV0rKQG6tl59HkojA6I2GUvinY\r\nszn/v1+COKy5IY5U0DaeDAHu2hHK6+KEWfXb4ztFS4UTGh3VMdK0jpj2LPTm\r\nGTnZ4OMbYm0xsv8D28pPy4eHkGpI83N/kzoT1D3AHrX40EYTAuDvU3ogBeMo\r\nWLCzHQXpnTN4hn9/UGg8i67o4hLAg5dULU++U9FaC3lf+gFYTmAGXtybUGsL\r\n4a076IvGdIUbA07iyHeFKrVn+/qn7FLJiUj3e2HBGGpOUnuhLTkRQzBK6Tzd\r\nrZwgtrPoFzkp372RHwjp418CS10xwqplqcDXtpjQgNX4UWwNLeUs5faFOi5n\r\n4zxlqEaVONRSigOgNcZ2LqlsD/KlWcnMFFQ=\r\n=92Ri\r\n-----END PGP SIGNATURE-----\r\n","engine":{"node":"^12.19.0 || ^14.15.0 || ^16.13.0"}},"publishedAt":"2022-07-13T12:13:57Z","isDefault":false,"advisoryKeys":[{"id":"GHSA-7r7x-4c4q-c4qf"},{"id":"GHSA-p6mm-27gq-9v3p"},{"id":"GHSA-xv97-c62v-4587"}],"dependencies":{"direct":{"@babel/runtime":"7.16.3","@panva/hkdf":"1.0.1","cookie":"0.4.1","jose":"4.3.7","oauth":"0.9.15","openid-client":"5.1.0","preact":"10.6.3","preact-render-to-string":"5.1.19","uuid":"8.3.2"},"dev":{"@babel/cli":"7.17.10","@babel/core":"7.18.2","@babel/plugin-proposal-optional-catch-binding":"7.16.7","@babel/plugin-transform-runtime":"7.18.2","@babel/preset-env":"7.18.2","@babel/preset-react":"7.17.12","@babel/preset-typescript":"7.17.12","@next-auth/tsconfig":"0.0.0","@swc/core":"1.2.198","@swc/jest":"0.2.21","@testing-library/dom":"8.13.0","@testing-library/jest-dom":"5.16.4","@testing-library/react":"13.3.0","@testing-library/react-hooks":"8.0.0","@testing-library/user-event":"14.2.0","@types/jest":"28.1.3","@types/node":"17.0.42","@types/nodemailer":"6.4.4","@types/oauth":"0.9.1","@types/react":"18.0.15","@types/react-dom":"18.0.6","autoprefixer":"10.4.7","babel-plugin-jsx-pragmatic":"1.0.2","babel-preset-preact":"2.0.0","cssnano":"5.1.11","jest":"28.1.1","jest-environment-jsdom":"28.1.1","jest-watch-typeahead":"1.1.0","msw":"0.42.3","next":"12.2.0","postcss":"8.4.14","postcss-cli":"9.1.0","postcss-nested":"5.0.6","react":"18","react-dom":"18","whatwg-fetch":"3.6.2"},"inDirect":{"lru-cache":"6.0.0","object-hash":"2.2.0","oidc-token-hash":"5.0.3","pretty-format":"3.8.0","regenerator-runtime":"0.13.11","yallist":"4.0.0"},"count":{"direct":9,"dev":36,"inDirect":6}},"vulnerabilities":{"vulns":[{"id":"GHSA-p6mm-27gq-9v3p","summary":"next-auth before v4.10.2 and v3.29.9 leaks excessive information into log","details":"### Impact\nAn information disclosure vulnerability in `next-auth` before `v4.10.2` and `v3.29.9` allows an attacker with log access privilege to obtain excessive information such as an identity provider's secret in the log (which is thrown during OAuth error handling) and use it to leverage further attacks on the system, like impersonating the client to ask for extensive permissions.\n\n### Patches\nWe patched this vulnerability in `v4.10.2` and `v3.29.9` by moving the log for `provider` information to the debug level. In addition, we added a warning for having the `debug: true` option turned on in production and documented it [here](https://next-auth.js.org/warnings#debug_enabled).\n> You have enabled the debug option. It is meant for development only, to help you catch issues in your authentication flow and you should consider removing this option when deploying to production. One way of only allowing debugging while not in production is to set debug: process.env.NODE_ENV !== \"production\", so you can commit this without needing to change the value.\n> \n> If you want to log debug messages during production anyway, we recommend setting the [logger option](https://next-auth.js.org/configuration/options#logger) with proper sanitization of potentially sensitive user information.\n\nTo upgrade:\n\n```sh\nnpm i next-auth@latest\n# or\nyarn add next-auth@latest\n# or\npnpm add next-auth@latest\n```\n(This will update to the latest v4 version, but you can change `latest` to 3 if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, you can user the `logger` configuration option by sanitizing the logs:\n```ts\n// Example\nimport log from \"your-logging-service\"\nexport const authOptions: NextAuthOptions = {\n  debug: process.env.NODE_ENV !== \"production\",\n  logger: {\n    error: (code, metadata) => {\n      if (!(metadata instanceof Error) &&  metadata.provider) {\n        // redact the provider secret here\n        delete metadata.provider\n        log.error(code, metadata)\n      } else {\n        log.error(code, metadata)\n      }\n    }\n  },\n}\n```\n\n### References\nRelated documentation:\n- https://next-auth.js.org/warnings#debug_enabled\n- https://next-auth.js.org/configuration/options#logger \n- https://next-auth.js.org/getting-started/upgrade-v4\n\n### For more information\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\nThe issue was reported 18th of July, a response was sent out in less than 20 minutes and after identifying the issue a patch was published within a week.","aliases":["CVE-2022-31186"],"modified":"2022-08-06T05:29:45Z","published":"2022-08-06T05:29:45Z","database_specific":{"cwe_ids":["CWE-532"],"github_reviewed":true,"severity":"LOW","github_reviewed_at":"2022-08-06T05:29:45Z","nvd_published_at":"2022-08-01T20:15:00Z"},"references":[{"type":"WEB","url":"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-p6mm-27gq-9v3p"},{"type":"ADVISORY","url":"https://nvd.nist.gov/vuln/detail/CVE-2022-31186"},{"type":"PACKAGE","url":"https://github.com/nextauthjs/next-auth"},{"type":"WEB","url":"https://next-auth.js.org/configuration/options#logger"},{"type":"WEB","url":"https://next-auth.js.org/getting-started/upgrade-v4"},{"type":"WEB","url":"https://next-auth.js.org/warnings#debug_enabled"}],"affected":[{"package":{"name":"next-auth","ecosystem":"npm","purl":"pkg:npm/next-auth"},"ranges":[{"type":"SEMVER","events":[{"introduced":"0"},{"fixed":"3.29.9"}]}],"database_specific":{"source":"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/08/GHSA-p6mm-27gq-9v3p/GHSA-p6mm-27gq-9v3p.json"}},{"package":{"name":"next-auth","ecosystem":"npm","purl":"pkg:npm/next-auth"},"ranges":[{"type":"SEMVER","events":[{"introduced":"4.0.0"},{"fixed":"4.10.2"}]}],"database_specific":{"source":"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/08/GHSA-p6mm-27gq-9v3p/GHSA-p6mm-27gq-9v3p.json"}}],"schema_version":"1.4.0","severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"}]},{"id":"GHSA-xv97-c62v-4587","summary":"NextAuth.js before 4.10.3 and 3.29.10 sending verification requests (magic link) to unwanted emails","details":"### Impact\n`next-auth` users who are using the `EmailProvider` either in versions before `4.10.3` or `3.29.10` are affected.\n\nIf an attacker could forge a request that sent a comma-separated list of emails (eg.: `attacker@attacker.com,victim@victim.com`) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being `attacker@attacker.com,victim@victim.com`. This means that basic authorization like `email.endsWith(\"@victim.com\")` in the `signIn` callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an `@attacker.com` address.\n\n### Patches\nWe patched this vulnerability in `v4.10.3` and `v3.29.10` by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a `normalizeIdentifier` callback on the `EmailProvider` configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance)\n\nTo upgrade, run one of the following:\n```sh\nnpm i next-auth@latest\n```\n```sh\nyarn add next-auth@latest\n```\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change `latest` to `3` if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\nIf for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:\n```ts\n// pages/api/auth/[...nextauth].ts\n\nfunction normalize(identifier) {\n  // Get the first two elements only,\n  // separated by `@` from user input.\n  let [local, domain] = identifier.toLowerCase().trim().split(\"@\")\n  // The part before \"@\" can contain a \",\"\n  // but we remove it on the domain part\n  domain = domain.split(\",\")[0]\n  return `${local}@${domain}`\n}\n\nexport default async function handler(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* your options */ })\n}\n```\n\n### References\n- EmailProvider: https://next-auth.js.org/providers/email\n- Normalize the email address: https://next-auth.js.org/providers/email#normalizing-the-email-address\n- Email syntax: https://en.wikipedia.org/wiki/Email_address#Local-part\n- `signIn` callback: https://next-auth.js.org/configuration/callbacks#sign-in-callback\n- Advanced Initialization: https://next-auth.js.org/configuration/initialization#advanced-initialization\n- `nodemailer` address: https://nodemailer.com/message/addresses\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 26th of July, a response was sent out in less than 1 hour and after identifying the issue a patch was published within 5 working days.\n\n### Acknowledgments\n\nWe would like to thank [Socket](https://socket.dev) for disclosing this vulnerability in a responsible manner and following up until it got published.","aliases":["CVE-2022-35924"],"modified":"2022-08-11T22:13:10Z","published":"2022-08-02T18:00:33Z","database_specific":{"cwe_ids":["CWE-20","CWE-863"],"github_reviewed":true,"severity":"CRITICAL","github_reviewed_at":"2022-08-02T18:00:33Z","nvd_published_at":"2022-08-02T18:15:00Z"},"references":[{"type":"WEB","url":"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587"},{"type":"ADVISORY","url":"https://nvd.nist.gov/vuln/detail/CVE-2022-35924"},{"type":"WEB","url":"https://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003"},{"type":"WEB","url":"https://en.wikipedia.org/wiki/Email_address#Local-part"},{"type":"PACKAGE","url":"https://github.com/nextauthjs/next-auth"},{"type":"WEB","url":"https://next-auth.js.org/configuration/callbacks#sign-in-callback"},{"type":"WEB","url":"https://next-auth.js.org/configuration/initialization#advanced-initialization"},{"type":"WEB","url":"https://next-auth.js.org/providers/email"},{"type":"WEB","url":"https://next-auth.js.org/providers/email#normalizing-the-e-mail-address"},{"type":"WEB","url":"https://next-auth.js.org/providers/email#normalizing-the-email-address"},{"type":"WEB","url":"https://nodemailer.com/message/addresses"}],"affected":[{"package":{"name":"next-auth","ecosystem":"npm","purl":"pkg:npm/next-auth"},"ranges":[{"type":"SEMVER","events":[{"introduced":"4.0.0"},{"fixed":"4.10.3"}]}],"database_specific":{"source":"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/08/GHSA-xv97-c62v-4587/GHSA-xv97-c62v-4587.json"}},{"package":{"name":"next-auth","ecosystem":"npm","purl":"pkg:npm/next-auth"},"ranges":[{"type":"SEMVER","events":[{"introduced":"0"},{"fixed":"3.29.10"}]}],"database_specific":{"source":"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/08/GHSA-xv97-c62v-4587/GHSA-xv97-c62v-4587.json"}}],"schema_version":"1.4.0","severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"}]},{"id":"GHSA-7r7x-4c4q-c4qf","summary":"Missing proper state, nonce and PKCE checks for OAuth authentication","details":"### Impact\n`next-auth` applications using OAuth provider versions before `v4.20.1` are affected.\n\nA bad actor who can spy on the victim's network or able to social engineer the victim to click a manipulated login link could intercept and tamper with the authorization URL to **log in as the victim**, bypassing the CSRF protection.\n\nAs an example, an attack can happen in the following scenario. \n\n> TL;DR: The attacker steals the victim's authenticated callback by intercepting and tampering with the authorization URL created by `next-auth`.\n\n1. The victim attempts to log in to the `next-auth` site. For example https://next-auth-example.vercel.app/\n2. `next-auth` sets the `checks` cookies according to how the OAuth provider is configured. In this case, `state` and `pkce` are set by default for the Google Provider.\n<img width=\"1971\" alt=\"Screen Shot 2023-03-03 at 09 54 26\" src=\"https://user-images.githubusercontent.com/31528554/222619750-a2062bb8-99eb-4985-a75c-d75acd3da67e.png\">\n\n3. The attacker intercepts the returned authorization URL, strips away the OAuth check (nonce, state, pkce), and returns the URL _without_ the check to the victim's browser. For example:\nFrom \n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app%2Fapi%2Fauth%2Fcallback%2Fgoogle&state=state&code_challenge=code_challenge&code_challenge_method=S256&service=lso&o2v=2&flowName=GeneralOAuthFlow```\nto\n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app%2Fapi%2Fauth%2Fcallback%2Fgoogle&service=lso&o2v=2&flowName=GeneralOAuthFlow```.\nNotice the parameters `state`, `code_challenge` and `code_verifier` are removed from the victim's address bar.\n\n4. The victim attempts to log in using their OAuth account.\n\n5. The Authorization Server logs the victim in and calls back to the `next-auth` `api/auth/callback/:providerId`endpoint. \n5.1. The attacker intercepts and logs this callback URL for later use.\n5.2. `next-auth` checks the callback call from OAuth Authorization Server (doesn't have checks) and compares the checks with the cookies set (has checks) at step 2. This check will fail, resulting in the victim isn't logged in. However, at this step, the Authorization Server has already accepted the victim's request to log in and generated/sent a `code` in the URL.\n6. The attacker now has an authorization URL with the `code` that the AS will exchange for valid `access_token`/`id_token` and can log in as the victim automatically. They can open a new browser window and paste in the URL logged at step 5.1 and log in as the victim.\n\n\n### Patches\nWe patched the vulnerability in `next-auth` `v4.20.1` \nTo upgrade, run one of the following:\n```\nnpm i next-auth@latest\n```\n```\nyarn add next-auth@latest\n```\n```\npnpm add next-auth@latest\n```\n\n### Workarounds\n\nUpgrading to `latest` is the recommended way to fix this issue. However, using [Advanced Initialization](https://next-auth.js.org/configuration/initialization#advanced-initialization), developers can manually check the [callback request](https://next-auth.js.org/getting-started/rest-api#getpost-apiauthcallbackprovider) for `state`, `pkce`, and `nonce` against the provider configuration, and abort the sign-in process if there is a mismatch. Check out the [source code](https://github.com/nextauthjs/next-auth/blob/v4/packages/next-auth/src/core/lib/oauth/checks.ts) for help.\n\n### References\n- [CSRF](https://www.rfc-editor.org/rfc/rfc6749#section-10.12)\n- [PKCE vs nonce](https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/)\n- [OAuth provider options](https://next-auth.js.org/configuration/providers/oauth)\n- [`checks` provider config](https://authjs.dev/reference/core/providers#checks)","aliases":["CVE-2023-27490"],"modified":"2023-03-13T20:52:50Z","published":"2023-03-13T20:52:50Z","database_specific":{"cwe_ids":["CWE-352"],"github_reviewed":true,"severity":"HIGH","github_reviewed_at":"2023-03-13T20:52:50Z","nvd_published_at":"2023-03-09T21:15:00Z"},"references":[{"type":"WEB","url":"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-7r7x-4c4q-c4qf"},{"type":"ADVISORY","url":"https://nvd.nist.gov/vuln/detail/CVE-2023-27490"},{"type":"WEB","url":"https://authjs.dev/reference/core/providers#checks"},{"type":"WEB","url":"https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/"},{"type":"PACKAGE","url":"https://github.com/nextauthjs/next-auth"},{"type":"WEB","url":"https://github.com/nextauthjs/next-auth/compare/next-auth@4.20.0...next-auth@4.20.1#diff-cf9257195d0cb6a835ae4ff1fc73fe2cac0bab847efb0832c1f551209a972b47R55"},{"type":"WEB","url":"https://next-auth.js.org/configuration/initialization#advanced-initialization"},{"type":"WEB","url":"https://next-auth.js.org/configuration/providers/oauth"},{"type":"WEB","url":"https://security.netapp.com/advisory/ntap-20230420-0006/"},{"type":"WEB","url":"https://www.rfc-editor.org/rfc/rfc6749#section-10.12"}],"affected":[{"package":{"name":"next-auth","ecosystem":"npm","purl":"pkg:npm/next-auth"},"ranges":[{"type":"SEMVER","events":[{"introduced":"0"},{"fixed":"4.20.1"}]}],"database_specific":{"source":"https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/03/GHSA-7r7x-4c4q-c4qf/GHSA-7r7x-4c4q-c4qf.json"}}],"schema_version":"1.4.0","severity":[{"type":"CVSS_V3","score":"CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N"}]}]}}